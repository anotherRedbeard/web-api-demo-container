name: Trigger app service deployment

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/deploy-package.yml'

  # Allow mannually trigger 
  workflow_dispatch:      

env:
  version: 'v1.0'
  location: 'southcentralus'
  app-service-postfix: 'todoapi'
  resource-group-name: 'red-scus-appsrvdemo-rg'
  registry-rg-name: 'red-scus-test-rg'
  registry-name: 'redscuscontainerreg000111'
  image-name: 'todo-webapi'
  #cors-allowed-url: 'https://todo-blazorclient-aca.lemontree-689bf7fa.southcentralus.azurecontainerapps.io'

jobs:
  build-infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -l ${{ env.location }} -n ${{ env.resource-group-name}}
            az deployment group create --resource-group ${{ env.resource-group-name }} \
             --template-file ./iac/main-deploy-app-service.bicep \
             --parameters app_service_postfix=${{ env.app-service-postfix }} app_service_sku=B1

      # Deploy Bicep file
      - name: Deploy App Service bicep
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_CREDENTIALS }}
          resourceGroupName: ${{ env.resource-group-name }}
          template: ./iac/main-deploy-app-service.bicep
          parameters: 'app_service_postfix=${{ env.app-service-postfix }} app_service_sku=B1'
          failOnStdErr: true
      
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  build:
    runs-on: ubuntu-latest
    needs: build-infra

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get Container Registry Credentials
        uses: azure/CLI@v1
        with:
          inlineScript: |
            ACR_USERNAME=$(az acr credential show -n ${{ env.registry-name }} --query username --out tsv)
            ACR_PASSWORD=$(az acr credential show -n ${{ env.registry-name }} --query passwords[0].value --out tsv)
            echo "::add-mask::$ACR_PASSWORD"
            echo ACR_USERNAME=$ACR_USERNAME >> $GITHUB_ENV
            echo ACR_PASSWORD=$ACR_PASSWORD >> $GITHUB_ENV

      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry-name }}.azurecr.io
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.registry-name }}.azurecr.io/${{ env.image-name }}:${{ env.version }}.${{ github.run_number }}
            latest
          file: ./Dockerfile
          context: ./

      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'myapp'
          images: '${{ env.registry-name }}.azurecr.io/${{ env.image-name }}:${{ github.run_number }}'

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear