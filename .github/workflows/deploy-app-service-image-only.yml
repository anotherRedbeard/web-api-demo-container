name: Trigger app service deployment of image only

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'

  # Allow manually trigger 
  workflow_dispatch:      

env:
  version: 'v1.0'
  location: ${{ vars.LOCATION }}
  app-service-prefix: 'red'
  app-service-postfix: 'todoapi'
  resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
  registry-rg-name: ${{ vars.REGISTRY_RG_NAME }}
  registry-name: ${{ vars.REGISTRY_NAME}}
  image-name: 'todo-webapi'
  main-app-service-deployment-name: 'main-deploy-app-service'

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get App Name
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APP_NAME=$(az deployment group show -g ${{ env.resource-group-name }} -n ${{ env.main-app-service-deployment-name }} --query properties.outputs.appServiceName.value  --output tsv)
            echo APP_NAME=$APP_NAME >> $GITHUB_ENV

      - name: Log in to container registry
        # Logging in to the Azure Container Registry using the service principal that is running this pipeline
        run: az acr login --name ${{ env.registry-name }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.registry-name }}.azurecr.io/${{ env.image-name }}:latest
            ${{ env.registry-name }}.azurecr.io/${{ env.image-name }}:${{ github.run_number }}
          file: ./Dockerfile
          context: ./

      - name: Update App Service with New Image Name
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: '${{ env.registry-name }}.azurecr.io/${{ env.image-name }}:latest'
          slot-name: 'stage'

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  swap-slot:
    runs-on: ubuntu-latest
    needs: build-deploy
    environment: Prod

    steps:

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get App Name
        uses: azure/CLI@v1
        with:
          inlineScript: |
            APP_NAME=$(az deployment group show -g ${{ env.resource-group-name }} -n ${{ env.main-app-service-deployment-name }} --query properties.outputs.appServiceName.value  --output tsv)
            echo APP_NAME=$APP_NAME >> $GITHUB_ENV
  

      - name: Swap slots
        run: |
          az webapp deployment slot swap --resource-group ${{ env.resource-group-name }} --name ${{ env.APP_NAME }} --slot stage --target-slot production
  
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

      
