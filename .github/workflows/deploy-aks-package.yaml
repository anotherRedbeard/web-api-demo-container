name: Trigger auto deployment for AKS demo
on:
    push:
      branches: 
        [ main ]
      paths:
        - '**'
        - '.github/workflows/deploy-aks-package.yml'

    workflow_dispatch: {}
env:
    VERSION: v1
    LOCATION: 'southcentralus'
    ACR_RESOURCE_GROUP: red-aks-demo-rg
    AZURE_CONTAINER_REGISTRY: myAksRepo
    CLUSTER_NAME: myAKSCluster
    CLUSTER_RESOURCE_GROUP: red-aks-demo-rg
    CONTAINER_NAME: todo-api
    NAMESPACE_NAME: aks-dev-ns
    DEPLOYMENT_MANIFEST_PATH: |
        ./azure-aks-deployment.yaml
jobs:
    buildInfra:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout to the branch
              uses: actions/checkout@v2

            - name: Azure Login
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Create Resource Group, Deploy Bicep
              uses: azure/CLI@v1
              with:
                inlineScript: |
                    az group create -l ${{ env.LOCATION }} -n ${{ env.CLUSTER_RESOURCE_GROUP}}
                    az deployment group create --resource-group ${{ env.CLUSTER_RESOURCE_GROUP }} \
                    --template-file ./iac/main-deploy-aks.bicep \
                    --parameters clusterName=${{ env.CLUSTER_NAME }} acrName=${{ env.AZURE_CONTAINER_REGISTRY }} agentCount=2 dnsPrefix=${{ env.CLUSTER_NAME }}
                    az aks update -n ${{ env.CLUSTER_NAME }} -g ${{ env.CLUSTER_RESOURCE_GROUP}} --attach-acr ${{ env.AZURE_CONTAINER_REGISTRY }}
            
            - name: Azure CLI script
              uses: azure/CLI@v1
              with:
                inlineScript: |
                    az logout
                    az cache purge
                    az account clear

    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildInfra
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: get blazor app endpoint
              uses: azure/CLI@v1
              with:
                inlineScript: |
                  BLAZOR_ENDPOINT=$(az aks command invoke -n ${{ env.CLUSTER_NAME }} -g ${{ env.CLUSTER_RESOURCE_GROUP }} -c 'kubectl describe services blazor ${{ env.TODO_BACKEND_SERVICE_NAME }} --namespace ${{ env.NAMESPACE_NAME }}' | awk -F: '/^LoadBalancer Ingress/{print$2}' | xargs echo)
                  echo BLAZOR_ENDPOINT=$BLAZOR_ENDPOINT >> $GITHUB_ENV
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ env.VERSION }}.${{ github.run_number }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile ./
            
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - name: Find and Replace - Using Secrets
              run: find *.yaml -type f -exec sed -i ''s%__ACRFullImageName__%${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.VERSION }}.${{ github.run_number }}%g'' {} \;
            - name: Find and Replace - Using Secrets
              run: find *.yaml -type f -exec sed -i ''s%__CorsAllowedHosts__%${{ env.BLAZOR_ENDPOINT }}%g'' {} \;
            - name: Bash - Show XML Contents
              run: cat ${{ env.DEPLOYMENT_MANIFEST_PATH }}
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.VERSION }}.${{ github.run_number }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: ${{ env.NAMESPACE_NAME }}
